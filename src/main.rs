///////////////////////////////////////////////////////////////////////////////

use std::{
    fs::File,
    io::{BufRead, BufReader},
};

use anyhow::Error;

mod merge_sort;
mod quick_sort;

///////////////////////////////////////////////////////////////////////////////

fn main() -> Result<(), Error> {
    Ok(())
}

///////////////////////////////////////////////////////////////////////////////

fn _parse_file(path: &str) -> Result<Vec<i32>, Error> {
    let input = File::open(path)?;
    let buffered = BufReader::new(input);

    let arr: Vec<i32> = buffered
        .lines()
        .map(|val| val.unwrap().parse::<i32>().unwrap())
        .collect();

    Ok(arr)
}

///////////////////////////////////////////////////////////////////////////////
